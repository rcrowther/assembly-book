<!DOCTYPE html><html><head><title>Macros</title><meta http-equiv="content-type" content="text/html; charset=UTF-8" /><link rel="stylesheet" type="text/css" media="screen" href="../lib/doc.css"/></head><body><article><h2>Macros</h2><p>Documentation says,</p><blockquote><p>NASM contains a powerful macro processor …</p></blockquote><p>I would not say any C‐like preprocessor is ‘powerful’—“awkward and limited” would be what I say… not the same spec as Tex or a LISP, are they? Perhaps we can agree on the word ‘useful’?</p><p>There’s a lot of information misssing from official documentation. Where do macro definitions go?</p><p>Can a single line macro definition be used as a function, an instruction‐substitute? No. This will fail,</p><pre><code>%define printStr(a)
printStr(a)</code></pre><pre><code>> error: parser: instruction expected</code></pre><p>That’s a multi‐line macro,</p><pre><code>%macro  printStr 1 
%endmacro</code></pre><pre><code>    printStr L44 </code></pre><p>Can a multi‐line macro expand into another multiline macro? No.</p></article></body></html>